#pragma once
#include "Engine.h"
#include "GameObject.h"
#include "Camera.h"

static uint8_t curLevel = 1;
// Define the maximum number of walkable tiles
static const uint16_t maxWalkableTiles = 35; // You can adjust this based on the actual number of walkable tiles

// Define the walkable tile indices
static const uint16_t walkableTiles[maxWalkableTiles] = { // change this to int8_t after reducing tilesheet under 255 tiles
    0, 3, 1, 16, 17, 18, 19, 20, 21, 33, 34, 35, 36, 37, 48, 49, 164, 165, 166, 180, 182, 196, 197, 198, 218, 219, 220, 221, 234, 237, 266, 267, 268, 344, 269, 
};

// Function to check if a tile index is walkable
inline static bool isTileWalkable(uint16_t tileIndex) {
    for (uint16_t i = 0; i < maxWalkableTiles; ++i) {
        if (walkableTiles[i] == tileIndex) {
            return true;
        }
    }
    return false;
}

inline static bool transition(GameObject* p)
{
  if(curLevel == 1 && p->entity.y == 0)
    if(p->entity.dir == UP)
    {
      curLevel = 2;
      return true;
    }  
  if(curLevel == 2 && p->entity.y == 560)
    if(p->entity.dir == DOWN)
    {
      curLevel = 1;
      return true;
    }  
  return false;
}

inline static void changeLevel( GameObject* p, Camera &cam)
{
  if(transition(p))
  {
    
    switch (curLevel)
    {
    case 1: 
      mapSizeY = 18;
      p->entity.x = 160;
      p->entity.y = 0;
      break;
    
    case 2:
      mapSizeY = 36;
      p->entity.x = 160;
      p->entity.y = 560;
      break;
    }
  }
  fullMapHeight = mapSizeY * tileSize;
}

static const uint16_t level1[18][20] PROGMEM =
{
{37,36,37,261,37,33,33,35,36,261,16,16,261,36,35,33,34,37,261,37},
{261,261,261,261,261,261,261,261,261,261,16,16,261,261,261,261,261,261,261,261},
{261,33,164,165,165,165,165,165,165,165,1,1,165,165,165,165,165,166,35,261},
{261,37,180,1,40,41,42,1,1,1,1,1,40,41,42,1,1,182,34,261},
{261,37,180,1,56,57,58,1,1,1,1,1,56,57,58,22,23,182,36,261},
{261,36,180,50,72,73,74,1,1,1,1,50,72,73,74,38,39,182,37,261},
{261,37,180,1,1,1,1,1,1,1,1,1,1,1,1,1,1,182,36,261},
{261,34,180,1,1,1,1,1,1,1,1,1,1,1,1,1,1,182,36,261},
{261,35,180,1,1,1,1,1,1,1,40,41,41,41,41,42,1,182,33,261},
{261,36,180,1,69,69,69,50,1,1,56,57,57,57,57,58,1,182,37,261},
{261,33,180,1,21,21,21,21,1,1,341,338,66,67,270,340,1,182,37,261},
{261,36,180,1,21,21,21,21,1,1,72,339,73,339,339,74,1,182,37,261},
{261,33,180,1,1,1,1,1,1,1,1,1,1,1,1,1,1,182,36,261},
{261,36,196,197,197,197,197,1,1,1,69,69,69,154,68,68,1,182,35,261},
{261,34,36,36,13,14,15,180,1,1,21,21,21,21,21,21,1,182,36,261},
{261,34,35,37,29,82,31,180,1,1,21,21,21,21,21,21,1,182,36,261},
{261,35,37,34,29,83,31,196,197,197,197,197,197,197,197,197,197,198,37,261},
{261,261,261,261,29,82,31,261,261,261,261,261,261,261,261,261,261,261,261,261},

};

static const uint16_t level2[36][20] PROGMEM =
{
{1,1,1,261,1,1,1,1,261,344,344,261,1,1,1,1,1,1,261,1},
{1,1,1,261,261,261,261,261,261,344,344,261,261,261,261,261,261,261,261,1},
{1,1,1,261,1,1,1,1,1,344,344,1,1,1,1,1,21,21,261,1},
{1,1,1,261,1,1,1,1,246,344,344,1,1,1,1,1,21,21,261,1},
{1,1,1,261,1,1,1,1,246,344,344,344,344,344,344,344,344,344,261,1},
{1,1,1,261,64,65,66,67,246,64,65,66,67,344,344,344,344,344,261,1},
{1,1,1,246,21,21,21,1,246,16,16,16,16,16,16,16,16,16,246,1},
{1,1,1,246,1,1,1,1,246,16,16,16,16,16,16,16,16,16,246,1},
{1,1,1,246,1,1,1,1,246,16,16,16,16,16,16,16,16,16,246,1},
{1,1,1,246,64,65,66,67,246,16,16,16,16,16,16,16,16,16,246,1},
{1,1,1,246,1,1,21,21,21,1,1,1,344,344,344,344,344,344,246,1},
{1,1,1,246,1,1,1,1,1,1,1,1,344,344,344,344,344,344,246,1},
{1,1,1,246,1,1,1,1,1,1,1,1,344,344,16,16,16,16,246,1},
{1,1,1,246,246,246,64,65,66,67,246,246,246,246,16,16,16,16,246,1},
{1,1,1,261,1,1,1,1,21,21,21,21,344,344,16,16,16,16,261,1},
{1,1,1,261,1,1,1,1,21,21,21,21,344,344,16,16,16,16,261,1},
{1,1,1,261,1,1,344,344,344,344,344,344,344,344,1,1,1,1,261,1},
{1,1,1,261,1,1,344,344,344,344,344,344,344,344,1,1,1,1,261,1},
{1,1,1,261,1,1,344,344,1,1,1,1,1,1,1,1,1,1,261,1},
{1,1,1,261,64,3,66,67,3,65,66,67,66,67,64,65,66,67,261,1},
{1,1,1,261,1,1,344,344,344,344,344,344,344,344,344,344,344,344,261,1},
{1,1,1,261,1,1,344,344,344,344,344,344,344,344,344,344,344,344,261,1},
{1,1,1,261,1,1,1,1,1,1,1,1,16,16,16,16,344,344,261,1},
{1,1,1,261,246,246,246,246,246,246,246,246,16,16,16,16,64,65,261,1},
{1,1,1,261,1,1,1,1,21,21,21,21,16,16,16,16,344,344,261,1},
{1,1,1,261,1,1,1,1,21,21,21,21,16,16,16,16,344,344,261,1},
{1,1,1,261,344,344,344,344,344,344,344,344,344,344,344,344,344,344,261,1},
{1,1,1,261,64,65,344,344,344,50,64,65,66,67,64,65,66,67,261,1},
{1,1,1,246,1,1,16,16,16,16,344,344,1,1,16,16,16,16,246,1},
{1,1,1,246,1,1,16,16,16,16,344,344,1,1,16,16,16,16,246,1},
{1,1,1,246,16,16,16,16,21,21,344,344,16,16,16,16,21,21,246,1},
{1,1,1,246,16,16,16,16,21,21,344,344,16,16,16,16,21,21,246,1},
{1,1,1,246,261,261,261,261,261,261,16,16,261,261,261,261,261,261,246,1},
{1,1,1,246,1,1,1,1,1,261,16,16,261,1,1,1,1,1,246,1},
{1,1,1,246,1,1,1,1,1,261,16,16,261,1,1,1,1,1,246,1},
{1,1,1,246,1,1,1,1,1,261,16,16,261,1,1,1,1,1,246,1}
};