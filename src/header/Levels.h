#pragma once
#include "Engine.h"
#include "GameObject.h"
#include "Camera.h"

static uint8_t curLevel = 1;
// Define the maximum number of walkable tiles
static const uint16_t maxWalkableTiles = 35; // You can adjust this based on the actual number of walkable tiles

// Define the walkable tile indices
static const uint16_t walkableTiles[maxWalkableTiles] = { // change this to int8_t after reducing tilesheet under 255 tiles
    37, 38, 1, 0, 5, 29, 30 ,31 ,32 ,33, 14 ,15 ,16 ,17 ,18 ,19,42,43,84,85,86,98,99,100,112,113,114
};

// Function to check if a tile index is walkable
inline static bool isTileWalkable(uint16_t tileIndex) {
    for (uint16_t i = 0; i < maxWalkableTiles; ++i) {
        if (walkableTiles[i] == tileIndex) {
            return true;
        }
    }
    return false;
}

inline static bool transition(GameObject* p)
{
  if(curLevel == 1 && p->entity.y == 0)
    if(p->entity.dir == UP)
    {
      curLevel = 2;
      return true;
    }  
  if(curLevel == 2 && p->entity.y == 560)
    if(p->entity.dir == DOWN)
    {
      curLevel = 1;
      return true;
    }  
  return false;
}

inline static void changeLevel( GameObject* p, Camera &cam)
{
  if(transition(p))
  {
    
    switch (curLevel)
    {
    case 1: 
      mapSizeY = 18;
      p->entity.x = 160;
      p->entity.y = 0;
      break;
    
    case 2:
      mapSizeY = 36;
      p->entity.x = 160;
      p->entity.y = 560;
      break;
    }
  }
  fullMapHeight = mapSizeY * tileSize;
}

static const uint16_t level1[18][20] PROGMEM =
{
{30,33,32,36,31,33,31,33,30,36,37,37,36,29,33,29,33,30,36,31},
{36,36,36,36,36,36,36,36,36,36,37,37,36,36,36,36,36,36,36,36},
{36,30,84,85,85,85,85,85,85,85,1,1,85,85,85,85,85,86,33,36},
{36,32,98,1,94,95,96,1,1,1,1,1,94,95,96,1,1,100,29,36},
{36,29,98,1,108,109,110,1,1,1,1,1,108,109,110,20,21,100,31,36},
{36,32,98,44,122,123,125,1,1,1,1,44,122,123,125,34,35,100,29,36},
{36,30,98,1,1,1,1,1,1,1,1,1,1,1,1,1,1,100,29,36},
{36,33,98,1,1,1,1,1,1,1,1,1,1,1,1,1,1,100,32,36},
{36,18,98,1,1,1,1,1,1,1,94,95,95,95,95,96,1,100,30,36},
{36,32,98,1,59,59,59,44,1,1,108,109,109,109,109,110,1,100,29,36},
{36,31,98,1,42,43,42,43,1,1,97,111,57,57,57,83,1,100,30,36},
{36,33,98,1,42,43,42,43,1,1,122,124,123,124,124,125,1,100,30,36},
{36,30,98,1,1,1,1,1,1,1,1,1,1,1,1,1,1,100,32,36},
{36,18,112,113,113,113,113,1,1,1,59,59,59,48,59,59,1,100,29,36},
{36,31,32,31,87,88,89,98,1,1,19,19,19,19,19,19,1,100,32,36},
{36,31,32,33,101,71,103,98,1,1,19,19,19,19,19,19,1,100,31,36},
{36,30,32,30,101,70,103,112,113,113,113,113,113,113,113,113,113,114,31,36},
{36,36,36,36,101,71,103,36,36,36,36,36,36,36,36,36,36,36,36,36},
};

static const uint16_t level2[36][20] PROGMEM =
{
{1,1,1,36,1,1,1,1,36,38,38,36,1,1,1,1,1,1,36,1},
{1,1,1,36,36,36,36,36,36,38,38,36,36,36,36,36,36,36,36,1},
{1,1,1,36,1,1,1,1,1,38,38,1,1,1,1,1,19,19,36,1},
{1,1,1,36,1,1,1,1,8,38,38,1,1,1,1,1,19,19,36,1},
{1,1,1,36,1,1,1,1,8,38,38,38,38,38,38,38,38,38,36,1},
{1,1,1,36,56,56,57,58,8,56,56,57,58,38,38,38,38,38,36,1},
{1,1,1,8,19,19,19,1,8,37,37,37,37,37,37,37,37,37,8,1},
{1,1,1,8,1,1,1,1,8,37,37,37,37,37,37,37,37,37,8,1},
{1,1,1,8,1,1,1,1,8,37,37,37,37,37,37,37,37,37,8,1},
{1,1,1,8,56,57,58,58,8,37,37,37,37,37,37,37,37,37,8,1},
{1,1,1,8,1,1,19,19,19,1,1,1,38,38,38,38,38,38,8,1},
{1,1,1,8,1,1,1,1,1,1,1,1,38,38,38,38,38,38,8,1},
{1,1,1,8,1,1,1,1,1,1,1,1,38,38,37,37,37,37,8,1},
{1,1,1,8,8,8,56,56,57,58,8,8,8,8,37,37,37,37,8,1},
{1,1,1,36,1,1,1,1,19,19,19,19,38,38,37,37,37,37,36,1},
{1,1,1,36,1,1,1,1,19,19,19,19,38,38,37,37,37,37,36,1},
{1,1,1,36,1,1,38,38,38,38,38,38,38,38,1,1,1,1,36,1},
{1,1,1,36,1,1,38,38,38,38,38,38,38,38,1,1,1,1,36,1},
{1,1,1,36,1,1,38,38,1,1,1,1,1,1,1,1,1,1,36,1},
{1,1,1,36,57,5,57,58,5,56,57,58,57,56,57,58,57,58,36,1},
{1,1,1,36,1,1,38,38,38,38,38,38,38,38,38,38,38,38,36,1},
{1,1,1,36,1,1,38,38,38,38,38,38,38,38,38,38,38,38,36,1},
{1,1,1,36,1,1,1,1,1,1,1,1,37,37,37,37,38,38,36,1},
{1,1,1,36,8,8,8,8,8,8,8,8,37,37,37,37,57,58,36,1},
{1,1,1,36,1,1,1,1,19,19,19,19,37,37,37,37,38,38,36,1},
{1,1,1,36,1,1,1,1,19,19,19,19,37,37,37,37,38,38,36,1},
{1,1,1,36,38,38,38,38,38,38,38,38,38,38,38,38,38,38,36,1},
{1,1,1,36,57,58,38,38,38,44,56,57,58,56,57,56,57,58,36,1},
{1,1,1,8,1,1,37,37,37,37,38,38,1,1,37,37,37,37,8,1},
{1,1,1,8,1,1,37,37,37,37,38,38,1,1,37,37,37,37,8,1},
{1,1,1,8,37,37,37,37,19,19,38,38,37,37,37,37,19,19,8,1},
{1,1,1,8,37,37,37,37,19,19,38,38,37,37,37,37,19,19,8,1},
{1,1,1,8,36,36,36,36,36,36,37,37,36,36,36,36,36,36,8,1},
{1,1,1,8,1,1,1,1,1,36,37,37,36,1,1,1,1,1,8,1},
{1,1,1,8,1,1,1,1,1,36,37,37,36,1,1,1,1,1,8,1},
{1,1,1,8,1,1,1,1,1,36,37,37,36,1,1,1,1,1,8,1},

};